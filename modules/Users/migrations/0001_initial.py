# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-19 02:21
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_country', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Country_state',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=100)),
                ('id_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Cover_photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_photo', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile_photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_photo', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('nick_name', models.CharField(max_length=30, unique=True)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('profile_swinger', models.CharField(blank=True, choices=[('A', 'Single Mujer'), ('B', 'Single Hombre'), ('C', 'Pareja')], max_length=1, null=True)),
                ('biography', models.CharField(max_length=180)),
                ('birdthday', models.DateField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('tattoo', models.BooleanField(default=False)),
                ('piercing', models.BooleanField(default=False)),
                ('smoke', models.BooleanField(default=False)),
                ('drink', models.BooleanField(default=False)),
                ('street', models.CharField(blank=True, max_length=50, null=True)),
                ('number_ext', models.CharField(blank=True, max_length=10, null=True)),
                ('number_int', models.CharField(blank=True, max_length=10, null=True)),
                ('col', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('can_move', models.CharField(blank=True, choices=[('A', 'Todo el mundo'), ('B', 'Mismo pa√≠s'), ('C', 'Mismo Estado')], max_length=1, null=True)),
                ('can_host_people', models.CharField(blank=True, choices=[('A', 'Si, con previo acuerdo'), ('B', 'No por el momento')], max_length=1, null=True)),
                ('sexual_orientation', models.CharField(blank=True, choices=[('A', 'Heterosexual'), ('B', 'Bisexual'), ('C', 'BiCurioso')], max_length=1, null=True)),
                ('couple_ht', models.BooleanField(default=False)),
                ('couple_bi', models.BooleanField(default=False)),
                ('couple_bi_her', models.BooleanField(default=False)),
                ('couple_bi_him', models.BooleanField(default=False)),
                ('women_ht', models.BooleanField(default=False)),
                ('women_bi', models.BooleanField(default=False)),
                ('men_ht', models.BooleanField(default=False)),
                ('men_bi', models.BooleanField(default=False)),
                ('complete_exchange', models.BooleanField(default=False)),
                ('threesome', models.BooleanField(default=False)),
                ('Cuckold', models.BooleanField(default=False)),
                ('light_exchange', models.BooleanField(default=False)),
                ('only_her', models.BooleanField(default=False)),
                ('Bdsm', models.BooleanField(default=False)),
                ('Gangbang', models.BooleanField(default=False)),
                ('View', models.BooleanField(default=False)),
                ('relation_open', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.Country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('id_cover_photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.Cover_photo')),
                ('id_profile_photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.Profile_photo')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
